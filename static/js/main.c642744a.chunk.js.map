{"version":3,"sources":["icons/brain.svg","icons/drink-coffee.svg","components/settings.js","components/timer.js","App.js","reportWebVitals.js","index.js"],"names":["Settings","onClick","e","stopPropagation","className","this","props","settingsVisible","htmlFor","disabled","timerStatus","id","type","name","placeholder","value","definedFocusMinutes","min","onInput","target","Math","floor","setDefinedFocusMinutes","setMinutes","definedBreakMinutes","setDefinedBreakMinutes","React","Component","Timer","useState","seconds","setSeconds","minutes","extraSeconds","setExtraSeconds","extraMinutes","setExtraMinutes","setSettingsVisibility","setTimerStatus","quote","setQuote","quoteAuthor","setQuoteAuthor","formatNumber","number","formatSeconds","formatMinutes","formatExtraMinutes","formatExtraSeconds","focusFinished","breakFinished","notifyMe","message","window","Notification","permission","requestPermission","then","alert","useEffect","localStorage","getItem","fetch","response","json","data","i","random","length","text","author","catch","console","error","interval","extraInterval","clearInterval","setInterval","setItem","src","brain","alt","coffee","toggleSettingsVisibility","App","Provider","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c642744a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brain.c4b918ca.svg\";","export default __webpack_public_path__ + \"static/media/drink-coffee.bfe5a970.svg\";","import React from \"react\";\r\nimport { BsPlayFill, BsPauseFill } from \"react-icons/bs\";\r\n\r\nclass Settings extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        onClick={(e) => e.stopPropagation()}\r\n        className={`settings ${\r\n          this.props.settingsVisible ? \"display-flex\" : \"display-none\"\r\n        }`}\r\n      >\r\n        <form>\r\n          <fieldset className=\"time-selectors\">\r\n            <div>\r\n              <div className=\"title-w-icon\">\r\n                <BsPlayFill />\r\n                <p className=\"caption\">Focus Time:</p>\r\n              </div>\r\n              <label className=\"caption\" htmlFor=\"focus-min\">\r\n                Minutes\r\n                <br />\r\n                <input\r\n                  disabled={\r\n                    this.props.timerStatus === \"activeFocus\" ||\r\n                    this.props.timerStatus === \"paused\"\r\n                  }\r\n                  id=\"focus-min\"\r\n                  className=\"time-field\"\r\n                  type=\"number\"\r\n                  name=\"focus-mm\"\r\n                  placeholder=\"00\"\r\n                  value={this.props.definedFocusMinutes}\r\n                  min=\"1\"\r\n                  onInput={(e) => {\r\n                    e.target.value = Math.floor(e.target.value);\r\n                    this.props.setDefinedFocusMinutes(+e.target.value);\r\n                    if (\r\n                      this.props.timerStatus === \"standbyBreak\" ||\r\n                      this.props.timerStatus === \"notStarted\"\r\n                    ) {\r\n                      this.props.setMinutes(+e.target.value);\r\n                    }\r\n                  }}\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"vertical-divider\"></div>\r\n\r\n            <div>\r\n              <div className=\"title-w-icon\">\r\n                <BsPauseFill />\r\n                <p className=\"caption\">Break Time:</p>\r\n              </div>\r\n              <label className=\"caption\" htmlFor=\"break-min\">\r\n                Minutes\r\n                <br />\r\n                <input\r\n                  disabled={this.props.timerStatus === \"activeBreak\"}\r\n                  id=\"break-min\"\r\n                  className=\"time-field\"\r\n                  type=\"number\"\r\n                  name=\"break-mm\"\r\n                  min=\"1\"\r\n                  placeholder=\"00\"\r\n                  value={this.props.definedBreakMinutes}\r\n                  onInput={(e) => {\r\n                    e.target.value = Math.floor(e.target.value);\r\n                    this.props.setDefinedBreakMinutes(+e.target.value);\r\n                    if (this.props.timerStatus === \"standbyFocus\") {\r\n                      this.props.setMinutes(+e.target.value);\r\n                    }\r\n                  }}\r\n                />\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n\r\n          <div className=\"dialog-buttons\"></div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import { useState, useEffect } from \"react\";\r\nimport brain from \"../icons/brain.svg\";\r\nimport coffee from \"../icons/drink-coffee.svg\";\r\nimport { BsPlayFill, BsFillPauseFill, BsGearFill } from \"react-icons/bs\";\r\nimport Settings from \"./settings\";\r\n\r\nexport default function Timer() {\r\n  const [definedFocusMinutes, setDefinedFocusMinutes] = useState(25);\r\n  const [definedBreakMinutes, setDefinedBreakMinutes] = useState(5);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [extraSeconds, setExtraSeconds] = useState(0);\r\n  const [extraMinutes, setExtraMinutes] = useState(0);\r\n  const [settingsVisible, setSettingsVisibility] = useState(false);\r\n  const [timerStatus, setTimerStatus] = useState(\"notStarted\"); // standbyFocus, activeFocus, activeBreak, paused, standbyBreak\r\n  const [quote, setQuote] = useState(\r\n    \"Do what you can, with what you have, where you are\"\r\n  );\r\n  const [quoteAuthor, setQuoteAuthor] = useState(\"Theodore Roosevelt\");\r\n\r\n  const formatNumber = (number) => {\r\n    if (number < 10) {\r\n      return `0${number}`;\r\n    } else {\r\n      return number;\r\n    }\r\n  };\r\n\r\n  const formatSeconds = formatNumber(seconds);\r\n  const formatMinutes = formatNumber(minutes);\r\n  const formatExtraMinutes = formatNumber(extraMinutes);\r\n  const formatExtraSeconds = formatNumber(extraSeconds);\r\n  const focusFinished =\r\n    minutes === 0 &&\r\n    seconds === 0 &&\r\n    extraMinutes === 0 &&\r\n    extraSeconds === 0 &&\r\n    timerStatus === \"activeFocus\";\r\n  const breakFinished =\r\n    minutes === 0 &&\r\n    seconds === 0 &&\r\n    extraMinutes === 0 &&\r\n    extraSeconds === 0 &&\r\n    timerStatus === \"activeBreak\";\r\n\r\n  const notifyMe = (message) => {\r\n    // Let's check if the browser supports notifications\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"This browser does not support desktop notification\");\r\n    }\r\n\r\n    // Let's check whether notification permissions have already been granted\r\n    else if (Notification.permission === \"granted\") {\r\n      // If it's okay let's create a notification\r\n      new Notification(message);\r\n      // let audio = new Audio('276607__mickleness__ringtone-foofaraw.mp3');\r\n      // audio.play();\r\n    }\r\n\r\n    // Otherwise, we need to ask the user for permission\r\n    else if (Notification.permission !== \"denied\") {\r\n      Notification.requestPermission().then(function (permission) {\r\n        // If the user accepts, let's create a notification\r\n        if (permission === \"granted\") {\r\n          new Notification(message);\r\n        }\r\n      });\r\n    }\r\n\r\n    // At last, if the user has denied notifications, and you\r\n    // want to be respectful there is no need to bother them any more.\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Notification.permission === \"default\") {\r\n      notifyMe(\"This is how you will be notified\");\r\n    }\r\n\r\n    if (localStorage.getItem(\"definedFocusMinutes\")) {\r\n      setDefinedFocusMinutes(+localStorage.getItem(\"definedFocusMinutes\"));\r\n    } else {\r\n      setDefinedFocusMinutes(25);\r\n    }\r\n\r\n    if (localStorage.getItem(\"definedBreakMinutes\")) {\r\n      setDefinedBreakMinutes(+localStorage.getItem(\"definedBreakMinutes\"));\r\n    } else {\r\n      setDefinedBreakMinutes(5);\r\n    }\r\n\r\n    fetch(\"https://type.fit/api/quotes\")\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (data) {\r\n        const i = Math.floor(Math.random() * data.length);\r\n        setQuote(data[i].text);\r\n        setQuoteAuthor(data[i].author)\r\n      })\r\n      .catch(e=> {\r\n        console.error(e);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    let extraInterval = null;\r\n\r\n    if (timerStatus === \"activeFocus\" || timerStatus === \"activeBreak\") {\r\n      clearInterval(extraInterval);\r\n      interval = setInterval(() => {\r\n        clearInterval(interval);\r\n\r\n        if (extraSeconds === 0) {\r\n          if (extraMinutes !== 0) {\r\n            setExtraSeconds(59);\r\n            setExtraMinutes(extraMinutes - 1);\r\n          }\r\n        } else {\r\n          setExtraSeconds(extraSeconds - 1);\r\n        }\r\n\r\n        if (extraMinutes === 0 && extraSeconds === 0) {\r\n          if (seconds === 0) {\r\n            if (minutes !== 0) {\r\n              setSeconds(59);\r\n              setMinutes(minutes - 1);\r\n            }\r\n          } else {\r\n            setSeconds(seconds - 1);\r\n          }\r\n        }\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval);\r\n\r\n      if (timerStatus === \"paused\") {\r\n        extraInterval = setInterval(() => {\r\n          clearInterval(extraInterval);\r\n\r\n          setExtraSeconds(extraSeconds + 1);\r\n          if (extraSeconds === 59) {\r\n            setExtraSeconds(0);\r\n            setExtraMinutes(extraMinutes + 1);\r\n          }\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    if (focusFinished) {\r\n      setTimerStatus(\"standbyFocus\");\r\n      notifyMe(\"Work finished!\");\r\n    }\r\n    if (breakFinished) {\r\n      setTimerStatus(\"standbyBreak\");\r\n      notifyMe(\"Break finished!\");\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(extraInterval);\r\n    };\r\n  }, [\r\n    extraMinutes,\r\n    extraSeconds,\r\n    minutes,\r\n    seconds,\r\n    focusFinished,\r\n    timerStatus,\r\n    breakFinished,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (timerStatus === \"standbyFocus\") {\r\n      setMinutes(definedBreakMinutes);\r\n    } else if (timerStatus === \"standbyBreak\" || timerStatus === \"notStarted\") {\r\n      setMinutes(definedFocusMinutes);\r\n    }\r\n\r\n    localStorage.setItem(\"definedFocusMinutes\", definedFocusMinutes);\r\n    localStorage.setItem(\"definedBreakMinutes\", definedBreakMinutes);\r\n  }, [timerStatus, definedBreakMinutes, definedFocusMinutes]);\r\n\r\n  return (\r\n    <div\r\n      className={`main-div${\r\n        timerStatus === \"standbyFocus\" ? \" standby-focus-bg\" : \"\"\r\n      } ${timerStatus === \"activeBreak\" ? \" active-break-bg\" : \"\"}`}\r\n      onClick={() => {\r\n        setSettingsVisibility(false);\r\n      }}\r\n    >\r\n      <div\r\n        className={`timer time ${\r\n          timerStatus === \"activeBreak\"\r\n            ? \"color-darkSurface\"\r\n            : \"color-lightSurface\"\r\n        }`}\r\n      >\r\n        <div className=\"timeCounter\">\r\n          <h1 className=\"h1\">\r\n            {formatMinutes}:{formatSeconds}\r\n          </h1>\r\n          <span\r\n            className={`extraTime ${\r\n              timerStatus === \"activeFocus\" ? \"extraTime-ticking\" : \"\"\r\n            } ${\r\n              extraMinutes === 0 && extraSeconds === 0\r\n                ? \"display-none\"\r\n                : \"display-inline\"\r\n            }`}\r\n          >\r\n            +{formatExtraMinutes}:{formatExtraSeconds}\r\n          </span>\r\n        </div>\r\n        <img\r\n          src={brain}\r\n          className={`main-image progress ${\r\n            timerStatus === \"standbyBreak\" ||\r\n            timerStatus === \"activeFocus\" ||\r\n            timerStatus === \"notStarted\" ||\r\n            timerStatus === \"paused\" ||\r\n            timerStatus === \"standbyFocus\"\r\n              ? \" display-block\"\r\n              : \"display-none\"\r\n          }`}\r\n          alt=\"logo\"\r\n        />\r\n        <img\r\n          src={coffee}\r\n          className={`main-image progress ${\r\n            timerStatus === \"activeBreak\" ? \" display-block\" : \"display-none\"\r\n          }`}\r\n          alt=\"logo\"\r\n        />\r\n        <br></br>\r\n\r\n        <div className=\"quote\">\r\n          <q className=\"subtitle\">{`${quote}.`}</q>\r\n          <p className=\"boldBody\">{`– ${quoteAuthor}.`}</p>\r\n          <button\r\n            onClick={() => {\r\n              setMinutes(definedBreakMinutes);\r\n              setTimerStatus(\"activeBreak\");\r\n            }}\r\n            className={`btn timer-btn ${\r\n              timerStatus === \"standbyFocus\"\r\n                ? \"display-flex background-color-darkSurface\"\r\n                : \"display-none\"\r\n            }`}\r\n          >\r\n            <BsPlayFill className=\"btn-icon\" />\r\n            Start Break\r\n          </button>\r\n          <button\r\n            onClick={() => setTimerStatus(\"activeFocus\")}\r\n            className={`btn timer-btn ${\r\n              timerStatus === \"notStarted\" ? \"display-flex\" : \"display-none\"\r\n            }`}\r\n          >\r\n            <BsPlayFill className=\"btn-icon\" />\r\n            Start timer\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setMinutes(definedFocusMinutes);\r\n              setTimerStatus(\"activeFocus\");\r\n            }}\r\n            className={`btn timer-btn ${\r\n              timerStatus === \"standbyBreak\" ? \"display-flex\" : \"display-none\"\r\n            }`}\r\n          >\r\n            <BsPlayFill className=\"btn-icon\" />\r\n            Start timer\r\n          </button>\r\n          <button\r\n            onClick={() => setTimerStatus(\"activeFocus\")}\r\n            className={`btn timer-btn ${\r\n              timerStatus === \"paused\" ? \"display-flex\" : \"display-none\"\r\n            }`}\r\n          >\r\n            <BsPlayFill className=\"btn-icon\" />\r\n            Resume\r\n          </button>\r\n          <button\r\n            onClick={() => setTimerStatus(\"paused\")}\r\n            className={`btn-outlined-dark timer-btn ${\r\n              timerStatus === \"activeFocus\" ? \"display-flex\" : \"display-none\"\r\n            }`}\r\n          >\r\n            <BsFillPauseFill className=\"btn-icon\" />\r\n            Pause\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <Settings\r\n            timerStatus={timerStatus}\r\n            settingsVisible={settingsVisible}\r\n            setMinutes={setMinutes}\r\n            setDefinedFocusMinutes={setDefinedFocusMinutes}\r\n            definedFocusMinutes={definedFocusMinutes}\r\n            setDefinedBreakMinutes={setDefinedBreakMinutes}\r\n            definedBreakMinutes={definedBreakMinutes}\r\n            toggleSettingsVisibility={() => {\r\n              setSettingsVisibility(false);\r\n            }}\r\n          />\r\n        </div>\r\n        <BsGearFill\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            setSettingsVisibility(!settingsVisible);\r\n          }}\r\n          className=\"settings-icon\"\r\n        />\r\n        <br></br>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './scss/styles.scss';\r\nimport React from \"react\";\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nimport Timer from './components/timer'\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <IconContext.Provider value={{ size: \"20px\" }}>\r\n        <main>\r\n          <Timer />\r\n        </main>\r\n      </IconContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}